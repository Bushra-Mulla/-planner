[{"D:\\SEI-14\\projects\\project 2\\planner\\src\\index.js":"1","D:\\SEI-14\\projects\\project 2\\planner\\src\\reportWebVitals.js":"2","D:\\SEI-14\\projects\\project 2\\planner\\src\\App.js":"3","D:\\SEI-14\\projects\\project 2\\planner\\src\\components\\Scheduler.js":"4","D:\\SEI-14\\projects\\project 2\\planner\\src\\components\\SideBar.js":"5","D:\\SEI-14\\projects\\project 2\\planner\\src\\components\\AddTask.js":"6","D:\\SEI-14\\projects\\project 2\\planner\\src\\components\\TimeLine.js":"7","D:\\SEI-14\\projects\\project 2\\planner\\src\\TEAM_MEMBER.js":"8","D:\\SEI-14\\projects\\project 2\\planner\\src\\components\\dashbourd.js":"9","D:\\SEI-14\\projects\\project 2\\planner\\src\\components\\All_tasks.js":"10","D:\\SEI-14\\projects\\project 2\\planner\\src\\components\\Dashbourd.js":"11","D:\\SEI-14\\projects\\project 2\\planner\\src\\components\\States.js":"12","D:\\SEI-14\\projects\\project 2\\planner\\src\\components\\Home.js":"13"},{"size":478,"mtime":1610838822382,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":5548,"mtime":1610979537374,"results":"17","hashOfConfig":"15"},{"size":3092,"mtime":1610979841027,"results":"18","hashOfConfig":"15"},{"size":3216,"mtime":1610962331494,"results":"19","hashOfConfig":"15"},{"size":3438,"mtime":1610981549798,"results":"20","hashOfConfig":"15"},{"size":1423,"mtime":1610981068627,"results":"21","hashOfConfig":"15"},{"size":1111,"mtime":1610980839489,"results":"22","hashOfConfig":"15"},{"size":1740,"mtime":1610861787897,"results":"23","hashOfConfig":"24"},{"size":636,"mtime":1610983524798,"results":"25","hashOfConfig":"15"},{"size":2246,"mtime":1610983703304,"results":"26","hashOfConfig":"15"},{"size":508,"mtime":1610983491593,"results":"27","hashOfConfig":"15"},{"size":218,"mtime":1610928768442,"results":"28","hashOfConfig":"15"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"d7kgp0",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"31"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"x1p9o4",{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"31"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"31"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"D:\\SEI-14\\projects\\project 2\\planner\\src\\index.js",[],["60","61"],"D:\\SEI-14\\projects\\project 2\\planner\\src\\reportWebVitals.js",[],"D:\\SEI-14\\projects\\project 2\\planner\\src\\App.js",["62","63"],"import React, { Component } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport SideBar from \"./components/SideBar\";\nimport TM from \"./TEAM_MEMBER\";\nexport default class App extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      allTasks: [],\n      complete: [],\n      start: [],\n      not_start: [],\n    };\n    this.PUBLIC_KEY = \"AIzaSyBnNAISIUKe6xdhq1_rjor2rxoI3UlMY7k\";\n    this.CALENDAR_ID = \"mpic6lfv96n6kfir1d5lvvknrg@group.calendar.google.com\";\n    this.access_token = \"\";\n    this.handleStartToggle = this.handleStartToggle.bind(this);\n  }\n  componentDidMount() {\n    this.refresh_token();\n    this.getData();\n  }\n  refresh_token = () => {\n    axios\n      .post(`https://accounts.google.com/o/oauth2/token`, {\n        client_id:\n          \"763600388168-faasredsv6urbv3ephcbfbmsjed60je7.apps.googleusercontent.com\",\n        client_secret: \"19WMF7KdUp_yvBF5T8hSuteE\",\n        refresh_token:\n          \"1//04uxkvmMLICo5CgYIARAAGAQSNwF-L9IrI6qL5o5cina3k1VJ-AHsMy829UeXB2Zvt0dnQ-M3IPLxFq4EoIctWgbZLZkZgQ1HtRw\",\n        grant_type: \"refresh_token\",\n      })\n      .then((response) => {\n        console.log(JSON.stringify(response.data));\n        this.access_token = response.data.access_token;\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  allTasks = (tasks) => {\n    const allTasks = tasks.map((task) => {\n      const events = this.state.allTasks;\n      task.color = \"\";\n      events.push(task);\n      this.setState({ allTasks: events });\n      this.setState({ not_start: events });\n    });\n    console.log(this.state.allTasks);\n  };\n\n  getData = () => {\n    const dataUrl = `https://www.googleapis.com/calendar/v3/calendars/${this.CALENDAR_ID}/events?key=${this.PUBLIC_KEY}`;\n    axios\n      .get(dataUrl)\n      .then((response) => {\n        this.allTasks(response.data.items);\n        console.log(response.data.items);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    //new calendar for new project => get new calendar id for every project and save it in state allproject:[]\n    // the query should be changeble if i want to change the calendar too\n    // var config = {\n    //   method: \"get\",\n    //   url: `https://www.googleapis.com/calendar/v3/users/me/calendarList?access_token=${this.access_token}`,\n    //   headers: { Authorization: `Bearer ${this.access_token}` },\n    // };\n    // axios(config)\n    //   .then(function (response) {\n    //     console.log(JSON.stringify(response.data));\n    //   })\n    //   .catch(function (error) {\n    //     console.log(error);\n    //   });\n  };\n\n  insert = (new_tasks) => {\n    var config = {\n      method: \"post\",\n      url: `https://www.googleapis.com/calendar/v3/calendars/${this.CALENDAR_ID}/events?access_token=${this.access_token}`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${this.access_token}`,\n      },\n      data: new_tasks,\n    };\n    axios(config)\n      .then(function (response) {\n        console.log(JSON.stringify(response.data));\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  update = (eventId, data) => {\n    var axios = require(\"axios\");\n    var config = {\n      method: \"put\",\n      url: `https://www.googleapis.com/calendar/v3/calendars/${this.CALENDAR_ID}/events/${eventId}?access_token=${this.access_token}`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer${this.access_token}`,\n      },\n      data: data,\n    };\n    axios(config)\n      .then(function (response) {\n        console.log(JSON.stringify(response.data));\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  delete = (eventId) => {\n    var axios = require(\"axios\");\n\n    var config = {\n      method: \"delete\",\n      url: `https://www.googleapis.com/calendar/v3/calendars/${this.CALENDAR_ID}/events/${eventId}?access_token=${this.access_token}`,\n      headers: {},\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(JSON.stringify(response.data));\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  handleStartToggle = (task, e) => {\n    const not_start = this.state.not_start.slice();\n    const start = this.state.start.slice();\n    const complete = this.state.complete.slice();\n    const allTasks = this.state.allTasks.slice();\n    const taskIndex_All = allTasks.indexOf(task);\n\n    const taskIndex = not_start.indexOf(task);\n    if (taskIndex !== -1) {\n      not_start.splice(taskIndex, 1);\n      start.push(task);\n      this.setState({ not_start });\n      this.setState({ start });\n      allTasks[taskIndex_All].color = \"bisque\";\n      this.setState({ allTasks });\n    } else if (taskIndex === -1) {\n      const Index = start.indexOf(task);\n      if (Index !== -1) {\n        start.splice(taskIndex, 1);\n        complete.push(task);\n        this.setState({ complete });\n        this.setState({ start });\n        allTasks[taskIndex_All].color = \"cadetblue\";\n        this.setState({ allTasks });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <SideBar\n          TM={TM.members}\n          allTasks={this.state.allTasks}\n          complete={this.state.complete}\n          start={this.state.start}\n          not_start={this.state.not_start}\n          get={this.getData}\n          add={this.insert}\n          update={this.update}\n          delete={this.delete}\n          onStartToggle={this.handleStartToggle}\n        />\n      </div>\n    );\n  }\n}\n","D:\\SEI-14\\projects\\project 2\\planner\\src\\components\\Scheduler.js",["64","65"],"import React, { Component } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.css\";\r\nimport AddTask from \"./AddTask\";\r\nexport default class Scheduler extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      modal: false,\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState((prevState) => ({\r\n      modal: !prevState.modal,\r\n    }));\r\n  }\r\n\r\n  handleDateClick = ({ event, el }) => {\r\n    this.toggle();\r\n    this.setState({ event });\r\n  };\r\n  handleEvent = (info) => {\r\n    console.log(info.event.start);\r\n    alert(\r\n      info.event.title +\r\n        \" has change \" +\r\n        info.event.start.toISOString() +\r\n        \"to\" +\r\n        info.event.end.toISOString()\r\n    );\r\n    let id = info.event.id;\r\n    let data = {\r\n      start: {\r\n        dateTime: info.event.start.toISOString(),\r\n        timeZone: \"America/Los_Angeles\",\r\n      },\r\n      end: {\r\n        dateTime: info.event.end.toISOString(),\r\n        timeZone: \"America/Los_Angeles\",\r\n      },\r\n      summary: info.event.title,\r\n    };\r\n    this.props.update(id, data);\r\n  };\r\n  handleEventDelete = (info) => {\r\n    if (window.confirm(`${info.event.title} Delete this task?`)) {\r\n      this.props.delete(info.event.id);\r\n    }\r\n  };\r\n  render() {\r\n    const data = this.props.allTasks;\r\n    const task = data.map((task) => {\r\n      return {\r\n        title: task.summary,\r\n        start: task.start.dateTime,\r\n        end: task.end.dateTime,\r\n        allDay: true,\r\n        id: task.id,\r\n        color: task.color,\r\n      };\r\n    });\r\n\r\n    return (\r\n      <div className=\"Scheduler\">\r\n        {\" \"}\r\n        <FullCalendar\r\n          plugins={[dayGridPlugin, interactionPlugin]}\r\n          initialView=\"dayGridMonth\"\r\n          weekends={false}\r\n          timeZone={\"Asia/Riyadh\"}\r\n          selectable={true}\r\n          selectMirror={true}\r\n          select={this.handleDateClick}\r\n          Draggable={true}\r\n          editable={true} // move the event\r\n          eventResizableFromStart={true}\r\n          eventDurationEditable={true}\r\n          eventStartEditable={true} //change start time\r\n          eventDurationEditable={true} //\r\n          eventDrop={this.handleEvent}\r\n          eventResize={this.handleEvent}\r\n          events={task}\r\n          eventClick={this.handleEventDelete}\r\n          // eventColor=\"#378006\"\r\n        />{\" \"}\r\n        <Modal\r\n          isOpen={this.state.modal}\r\n          toggle={this.toggle}\r\n          className={this.props.className}\r\n        >\r\n          <ModalHeader toggle={this.toggle}>New Task</ModalHeader>\r\n          <ModalBody>\r\n            {\" \"}\r\n            <AddTask add={this.props.add} />\r\n          </ModalBody>\r\n          <ModalFooter></ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","D:\\SEI-14\\projects\\project 2\\planner\\src\\components\\SideBar.js",[],"D:\\SEI-14\\projects\\project 2\\planner\\src\\components\\AddTask.js",[],"D:\\SEI-14\\projects\\project 2\\planner\\src\\components\\TimeLine.js",[],"D:\\SEI-14\\projects\\project 2\\planner\\src\\TEAM_MEMBER.js",[],"D:\\SEI-14\\projects\\project 2\\planner\\src\\components\\dashbourd.js",["66","67"],"D:\\SEI-14\\projects\\project 2\\planner\\src\\components\\All_tasks.js",["68"],"import React, { Component } from \"react\";\r\nimport State from \"./States\";\r\nexport default class All_tasks extends Component {\r\n  render() {\r\n    const task = this.props.task;\r\n    const states = this.props.isStart\r\n      ? \"start\"\r\n      : this.props.isComplete\r\n      ? \"completed\"\r\n      : \"\";\r\n\r\n    return (\r\n      <div className=\"summary \" id={`${states}`}>\r\n        <h2>{this.props.task}</h2>\r\n        <p>{this.props.description}</p>\r\n        <State\r\n          onStartToggle={this.props.onStartToggle}\r\n          isStart={this.props.isStart}\r\n          isComplete={this.props.isComplete}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","D:\\SEI-14\\projects\\project 2\\planner\\src\\components\\Dashbourd.js",["69"],"import React, { Component } from \"react\";\r\nimport All_tasks from \"./All_tasks\";\r\nexport default class Dashbourd extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      filter: \"All\",\r\n    };\r\n  }\r\n  handleFilterClick = (filter) => {\r\n    this.setState({ filter });\r\n  };\r\n  render() {\r\n    const All = this.state.filter === \"All\" ? \"is-active \" : \"\";\r\n    const isnot_start = this.state.filter === \"not_start\" ? \"is-active \" : \"\";\r\n    const isStart = this.state.filter === \"start\" ? \"is-active \" : \"\";\r\n    const iscomplated = this.state.filter === \"complated\" ? \"is-active \" : \"\";\r\n\r\n    const listView =\r\n      this.state.filter === \"All\"\r\n        ? this.props.allTasks\r\n        : this.state.filter === \"not_start\"\r\n        ? this.props.not_start\r\n        : this.state.filter === \"start\"\r\n        ? this.props.start\r\n        : this.state.filter === \"complated\"\r\n        ? this.props.complete\r\n        : \"\";\r\n\r\n    const All_task = listView.map((task) => {\r\n      return (\r\n        <All_tasks\r\n          task={task.summary}\r\n          description={task.description}\r\n          key={task.id}\r\n          onStartToggle={() => this.props.onStartToggle(task)}\r\n          isStart={this.props.start.includes(task)}\r\n          isComplete={this.props.complete.includes(task)}\r\n        />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"task-list-header\">\r\n          <div\r\n            className={`task-list-filter ${All}`}\r\n            onClick={() => this.handleFilterClick(\"All\")}\r\n          >\r\n            All task\r\n          </div>\r\n          <div\r\n            className={`task-list-filter ${iscomplated}`}\r\n            onClick={() => this.handleFilterClick(\"complated\")}\r\n          >\r\n            complated\r\n          </div>\r\n          <div\r\n            className={`task-list-filter ${isStart}`}\r\n            onClick={() => this.handleFilterClick(`start`)}\r\n          >\r\n            start\r\n          </div>\r\n          <div\r\n            className={`task-list-filter ${isnot_start}`}\r\n            onClick={() => this.handleFilterClick(`not_start`)}\r\n          >\r\n            not start\r\n          </div>\r\n        </div>\r\n        <div className=\"list\">{All_task}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","D:\\SEI-14\\projects\\project 2\\planner\\src\\components\\States.js",[],"D:\\SEI-14\\projects\\project 2\\planner\\src\\components\\Home.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":44,"column":11,"nodeType":"76","messageId":"77","endLine":44,"endColumn":19},{"ruleId":"78","severity":1,"message":"79","line":44,"column":39,"nodeType":"80","messageId":"81","endLine":44,"endColumn":41},{"ruleId":"74","severity":1,"message":"82","line":5,"column":10,"nodeType":"76","messageId":"77","endLine":5,"endColumn":16},{"ruleId":"83","severity":1,"message":"84","line":85,"column":11,"nodeType":"85","endLine":85,"endColumn":39},{"ruleId":"86","severity":1,"message":"87","line":14,"column":19,"nodeType":"76","messageId":"88","endLine":14,"endColumn":24},{"ruleId":"89","severity":1,"message":"90","line":16,"column":9,"nodeType":"91","endLine":22,"endColumn":11},{"ruleId":"74","severity":1,"message":"92","line":5,"column":11,"nodeType":"76","messageId":"77","endLine":5,"endColumn":15},{"ruleId":"89","severity":1,"message":"90","line":32,"column":9,"nodeType":"91","endLine":39,"endColumn":11},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'allTasks' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Button' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-use-before-define","'tasks' was used before it was defined.","usedBeforeDefined","react/jsx-pascal-case","Imported JSX component All_tasks must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'task' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]